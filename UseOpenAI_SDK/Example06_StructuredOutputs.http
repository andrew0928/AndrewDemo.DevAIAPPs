@name = Structured Outputs


### mode 1, no format required

POST https://api.openai.com/v1/chat/completions
Content-Type: application/json
Authorization: Bearer {{OpenAI_APIKEY}}

{
    "model": "gpt-4o-mini",
    "messages": [
        {
          "role": "system", 
          "content": "You are a helpful math tutor. Guide the user through the solution step by step."
        },
        {
          "role": "user", 
          "content": "how can I solve 8x + 7 = -23"
        }
    ],
    "temperature": 0.2
}




### mode 2, simple required format to json_object, define schema in prompt

POST https://api.openai.com/v1/chat/completions
Content-Type: application/json
Authorization: Bearer {{OpenAI_APIKEY}}

{
  "model": "gpt-4o-mini",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful math tutor. Guide the user through the solution step by step."
    },
    {
      "role": "user",
      "content": "how can I solve 8x + 7 = -23"
    },
    {
      "role": "user",
      "content": "response me in this json format: { 'steps': [ { 'explanation': 'reason', 'output': 'result' } ], 'final_answer': 'answer' }"
    }
  ],
  "temperature": 0.2,
  "response_format": { "type": "json_object" }
}



              
### mode 3, with json schema

POST https://api.openai.com/v1/chat/completions
Content-Type: application/json
Authorization: Bearer {{OpenAI_APIKEY}}

{
  "model": "gpt-4o-mini",
  "messages": [
    {
      "role": "system",
      "content": "You are a helpful math tutor. Guide the user through the solution step by step."
    },
    {
      "role": "user",
      "content": "how can I solve 8x + 7 = -23"
    }
  ],
  "response_format": {
    "type": "json_schema",
    "json_schema": {
      "name": "math_reasoning",
      "schema": {
        "type": "object",
        "properties": {
          "steps": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "explanation": { "type": "string" },
                "output": { "type": "string" }
              },
              "required": ["explanation", "output"],
              "additionalProperties": false
            }
          },
          "final_answer": { "type": "string" }
        },
        "required": ["steps", "final_answer"],
        "additionalProperties": false
      },
      "strict": true
    }
  }
}







### Dify Workflow: JsonObject
POST https://dify.91dev.tw/v1/workflows/run
Content-Type: application/json
Authorization: Bearer app-GiimfV0OtD56PzklvOnXuDw0

{
    "inputs": 
    {
      "math": "8x + 7 = -23"
    },
    "response_mode": "blocking",
    "user": "andrew"
}


### Dify Workflow: JsonSchema, https://dify.91dev.tw/app/1f71e90b-b2b3-4352-a390-fb4a89f0050b/workflow
POST https://dify.91dev.tw/v1/workflows/run
Content-Type: application/json
Authorization: Bearer app-cKNq5Yujc93yxRBq3N77r1IH

{
    "inputs": 
    {
      "math": "8x + 7 = -23"
    },
    "response_mode": "blocking",
    "user": "andrew"
}